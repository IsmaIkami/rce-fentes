
import streamlit as st
import networkx as nx
import matplotlib.pyplot as plt

def build_graph(context):
    G = nx.DiGraph()
    G.add_node("Source")

    if context == "Fente gauche ouverte":
        G.add_node("Fente gauche ouverte")
        G.add_node("Impact sur l'√©cran (gauche)")
        G.add_edge("Source", "Fente gauche ouverte")
        G.add_edge("Fente gauche ouverte", "Impact sur l'√©cran (gauche)")
    elif context == "Fente droite ouverte":
        G.add_node("Fente droite ouverte")
        G.add_node("Impact sur l'√©cran (droite)")
        G.add_edge("Source", "Fente droite ouverte")
        G.add_edge("Fente droite ouverte", "Impact sur l'√©cran (droite)")
    elif context == "Les deux fentes ouvertes":
        G.add_node("Les deux fentes ouvertes")
        G.add_node("Interf√©rence")
        G.add_edge("Source", "Les deux fentes ouvertes")
        G.add_edge("Les deux fentes ouvertes", "Interf√©rence")

    return G

st.set_page_config(page_title="RCE ‚Äì Fentes", layout="wide")
st.title("üß™ Exp√©rience des fentes ‚Äì Interpr√©tation classique vs RCE")

st.markdown("Choisissez le **contexte exp√©rimental** (fentes ouvertes) :")

context_choice = st.radio("Configuration des fentes :", 
                          ["Fente gauche ouverte", "Fente droite ouverte", "Les deux fentes ouvertes"])

st.markdown("---")
col1, col2 = st.columns(2)

with col1:
    st.subheader("üéì Physique quantique standard")
    if context_choice == "Les deux fentes ouvertes":
        st.markdown("""
        - Le syst√®me est en **superposition d'√©tats**.
        - On parle d‚Äô**onde de probabilit√©** qui interf√®re avec elle-m√™me.
        - Le paradoxe : pourquoi une particule interf√©rerait-elle seule, sans interaction ?
        """)
        st.warning("R√©sultat : franges d‚Äôinterf√©rence observ√©es
‚û°Ô∏è Mais interpr√©tation reste floue (dualit√©s, effondrement, ou multivers).")
    else:
        st.success("Une seule fente ‚Üí trajectoire classique observ√©e.
‚û°Ô∏è Comportement local interpr√©t√© comme corpusculaire.")

with col2:
    st.subheader("üß† Th√©orie relationnelle (RCE)")
    if context_choice == "Les deux fentes ouvertes":
        st.markdown("""
        - Aucune trajectoire d√©finie n‚Äôest activ√©e.
        - Le graphe de coh√©rence contient **plusieurs issues li√©es**, indissociables.
        - L‚Äôinterf√©rence est une **actualisation relationnelle**, non une dualit√© onde/particule.
        """)
        st.success("R√©sultat : la structure logique impose une configuration globale coh√©rente.
‚û°Ô∏è Pas besoin d‚Äôonde ni de superposition ontologique.")
    else:
        st.markdown("""
        - Le contexte (fente unique) impose une **branche logique unique**.
        - Pas de potentiel d‚Äôinterf√©rence, donc issue directe actualis√©e.
        """)
        st.success("R√©sultat : issue actualis√©e par la coh√©rence du contexte seul.
‚û°Ô∏è Comportement classique r√©interpr√©t√© logiquement.")

st.markdown("---")
st.subheader("üîó Graphe de coh√©rence contextuelle (selon RCE)")

G = build_graph(context_choice)
fig, ax = plt.subplots(figsize=(8, 5))
pos = nx.spring_layout(G, seed=42)
nx.draw(G, pos, with_labels=True, node_color='lightblue', node_size=2000, font_size=10, arrows=True, ax=ax)
st.pyplot(fig)

st.info("üí° Dans le paradigme relationnel, la r√©alit√© ne pr√©existe pas : elle s'actualise en fonction des contraintes de coh√©rence logique impos√©es par le contexte.")
